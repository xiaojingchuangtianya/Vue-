MVC模式 : model（模型：数据） > view（视图：用户所见界面） > control (控制器：事件交互后，改变数据和界面)
MVVM模式 ：

VUE特点：
    减少了不必要的DOM操作，使用了虚拟DOM,双向数据绑定的概念

v-if:用于条件判别，可以使用v-else但必须两个连在一起使用
    <p v-if="age<10"></p>
    <p v-else-if="age<18">
    <p v-else></p>
v-show与v-if类似，但是v-show只是将页面内容隐藏，不改变展示源码内容
v-for:用于遍历循环

computed:计算属性最大优点就是会将结果缓存起来,不修改组成数据,就不会耗费资源

watch:监听事件,不建议多用,会造成性能降低,能用computed的尽量用computed

事件修饰符:.stop:阻止向上冒泡
        .prevent:提交事件不重载页面,
        .capture:
        .self:
        .once:只触发一次
        .passive:

v-model的修饰符
.lazy:输入修改完,离开输入框,内容才会修改
.number:将输入的值转换为数字
.trim:去掉头部和尾部的空白字符

动画:
定义好 <transition name="**"></transition>
然后写样式:
    **-enter:进入过渡的开始状态
    **-enter-active:进入到过渡生效的状态,在整个过渡阶段中应用,在元素被插入前生效,动画完成时删除
    **-enter-to:进入过渡的结束状态,在元素被插入后下一帧生效,在动画完成后移除
    **-leave:定义离开过渡时的状态
    **-leave-active:离开过渡生效时的状态,在离开过渡的阶段中应用,在离开过渡被触发时立刻发生,动画结束后移除,用来定义离开过渡的事件,延迟,曲线函数等
    **-leave_to:离开过渡的结束状态,离开过渡被触发后的下一帧生效,在过渡/动画完成后移除





VUE生命周期:
